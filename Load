-- This file was generated using Luraph Obfuscator v13.5.6

return(function(ii,Ki,Hi,si,bi,ni,ji,Ai,Ci,fi,oi,Si,qi,Ii,pi,wi,gi,Ji,ai,li,Fi,Ni,hi,Bi,Ti,ki,ei,ri,Wi,Ei,Xi,Ui,Pi,di,Ri,Zi,Vi,Yi,ti,ci,O,...)local z,s,G,m=nil,nil,nil,nil;local Qi=(0x3);while Qi<0X004 do if not(Qi<=1)then if Qi~=0x2 then do z=Ni;end;do Qi=0;end;else m=li;Qi=4;end;elseif Qi~=0 then do G=qi;end;Qi=0X002;else s=Ci.yield;Qi=1;end;end;local E=(bit or Si);Qi=0x4;local y,x,C,Z,N=nil,nil,nil,nil,nil;repeat if Qi<=0X1 then if Qi~=0 then N=string.rep;Qi=0x5;else C=ai;Qi=2;end;else do if not(Qi<=0X2)then if Qi==0X3 then do x=ji.char;end;Qi=0;else y=ji.sub;Qi=0X3;end;else Z=1;do Qi=0X1;end;end;end;end;until Qi>4;local H,l=4294967296,table.insert;local D,a,t,W,e=tonumber,nil,nil,nil,nil;local v=ti;local q=Yi;local L=(assert);for JF=0,3 do if JF<=0X001 then if JF==0x0 then a=si;else t=coroutine.wrap;end;else if JF==0X2 then W={[0x0]=1};else e=ei or pi.unpack;end;end;end;do Qi=10;end;local T,c,u,d,I,f,V,o,R=nil,nil,nil,nil,nil,nil,nil,nil,nil;repeat if Qi<=5 then if not(Qi<=0X0002)then if not(Qi<=3)then if Qi~=0X4 then R=0X002^52;Qi=0Xc;else Qi=0X9;end;else Qi=0X0008;end;else do if not(Qi<=0)then if Qi~=1 then c=(T and T()or ci);Qi=0X00006;else o=2147483648;Qi=5;end;else d=C(y(d,0X0005),'.\046',function(pG)if u(pG,2)~=72 then local RL=(x(D(pG,16)));do if I then local V8=N(RL,I);I=nil;return V8;else return RL;end;end;else local BI=1;while true do if BI==0 then return"";else do I=D(y(pG,0x1,1));end;BI=0;end;end;end;end);Qi=7;end;end;end;else if not(Qi<=8)then do if not(Qi<=0x009)then if Qi==10 then do Qi=0xB;end;else T=Ti;Qi=0X2;end;else di=0x3;end;end;elseif Qi<=6 then u=string.byte;Qi=0X4;else do if Qi==0x7 then V=function()local mr,Mr=0x1,nil;while(true)do do if not(mr<=0X00)then if mr~=1 then return Mr;else Mr=u(d,Z,Z);mr=0;end;else do Z=Z+1;end;do mr=0x02;end;end;end;end;end;Qi=1;else f=H-0X1;Qi=0;end;end;end;end;until Qi>=12;local r=o-0X1;Qi=0;local b,g,U,p,w=nil,nil,nil,nil,(nil);repeat if Qi<=2 then if Qi<=0x0 then b=function()local Co,Go,co,jo,Wo=0X0,nil,nil,nil,(nil);repeat if Co<=0X00 then Go,co,jo,Wo=u(d,Z,Z+Zi);Co=1;else do if Co~=0X01 then do return Wo*di+jo*65536+co*256+Go;end;else Z=Z+0x4;do Co=0X2;end;end;end;end;until(false);end;do Qi=0x4;end;else if Qi~=0X1 then w={[0]={[0]=0X00,0X01,0x0002,3,0X4,0x5,0X6,7,0X00008,9,0XA,Vi,12,13,0XE,0x000f},{[0X0]=0X1,0X0,Zi,2,5,0X4,7,6,0X9,8,11,0X000A,13,12,15,0XE},{[0]=0X2,0X3,0,0X0001,6,0X0007,0X4,0X0005,10,11,8,0X9,bi,15,12,0xd},{[oi]=3,0x2,0X0001,0x0,7,6,0x5,0X00004,0X00b,Hi,0X9,0X8,15,0XE,0X0000D,0XC},{[0x00]=4,0x00005,6,7,0,0X001,0X002,3,0X0c,Ri,14,0xf,0X08,fi,10,11},{[0X00000]=0x5,4,7,6,0x1,0,3,0x2,Ri,0X00c,0X0000f,bi,0X9,ri,11,0X0000A},{[oi]=6,0X0007,Wi,5,0x2,0X3,0X000,Ui,14,0xF,12,0X00d,0X00A,0Xb,0x8,0X9},{[0x0]=0x007,6,5,Wi,0X00003,2,0X1,0,15,14,0X00d,0X000C,11,0X000a,0X09,8},{[0X000]=8,fi,10,0XB,12,13,bi,0XF,oi,0X01,gi,0x3,0X4,5,6,7},{[0]=0X9,ri,11,Hi,0XD,0xc,0X00f,14,1,0x0,Zi,2,5,0X4,0X7,6},{[0X0]=0xa,11,0X8,fi,14,15,12,13,2,3,0X0,1,0X6,Ai,4,5},{[0]=11,Hi,fi,8,15,14,13,wi,3,0x2,1,0,7,0X006,0X05,4},{[0]=wi,0xd,0xe,0Xf,8,0X9,0x0A,11,4,0X5,0X006,0X00007,0X0,0x001,0X002,0X3},{[0]=13,12,0X0000F,0XE,0x9,0X8,0X00b,10,0X005,4,7,0x6,0X1,oi,0X3,2},{[0X0]=0xE,15,12,Ri,Hi,Vi,0x8,fi,0X00006,0X7,Wi,0X5,2,0X0003,0X0,1},{[0X0000]=0XF,0XE,13,12,0xB,0Xa,9,ri,0x7,6,0X005,0X04,3,gi,1,0X0}};Qi=0X06;else p=Ii;Qi=2;end;end;else if not(Qi<=0X0003)then if Qi==0x4 then do local gZ=(2);do for qs=1,0x00001f do do for oH=0,0X1 do if oH~=0x0 then do gZ=gZ*0X002;end;else do W[qs]=gZ;end;end;end;end;end;end;end;Qi=0X00005;else g=function()local aY,WY=b(),(b());local yY=0;while(true)do if yY~=0 then return WY*H+aY;else if not(WY>=o)then else WY=WY-H;end;do yY=0X1;end;end;end;end;Qi=3;end;else do U=function(IC,oC,wC)local rC=nil;for IF=0,0X1 do if IF==0 then rC=(IC/W[oC])%W[wC];else do rC=rC-rC%0X1;end;end;end;do return rC;end;end;end;Qi=1;end;end;until Qi>=6;local M=Ei;local A=(function()local As=(b());local Ls,Bs,zs,fs,ps=0,nil,nil,nil,nil;repeat do if Ls<=0X1 then if Ls==0 then do Bs=b();end;Ls=1;else zs=0X0001;do Ls=3;end;end;else if Ls<=2 then ps=U(Bs,0X000014,Vi);Ls=0X05;else do if Ls~=3 then fs=(-1)^U(Bs,0X1F,0X1);Ls=0x00002;else if As==0X00000 and Bs==0 then return oi;end;Ls=4;end;end;end;end;end;until Ls==5;local Ns=U(Bs,0,0X014)*H+As;do Ls=1;end;while"\103l-\095C"do if Ls==0X0 then return fs*(0X2^(ps-0X3FF))*(Ns/R+zs);else if ps==0X00000 then if Ns~=0X00 then ps=0X0001;zs=0X0;else return fs*0;end;else if ps~=2047 then else if Ns~=0X0 then return fs*(Ui/0X00000);else return fs*(0/0);end;end;end;Ls=0X0;end;end;end);local B=E and E[Bi]or function(Hk,kk)Hk=Hk%H;local vk,Pk,fk=3,nil,(nil);do while vk~=0X00004 do if vk<=0x001 then if vk~=0X0 then fk=0X0;vk=0;else while Hk>0 and kk>0 do local l_=0x003;local M_,Y_=nil,nil;while l_<=5 do if not(l_<=0X2)then if not(l_<=0X00003)then do if l_~=0X4 then fk=fk+w[M_][Y_]*Pk;do l_=1;end;else Y_=kk%0X10;l_=0X5;end;end;else M_=Hk%16;l_=0x4;end;else if not(l_<=0)then if l_~=0X1 then kk=(kk-Y_)/0X00010;l_=0x0;else do Hk=(Hk-M_)/16;end;do l_=2;end;end;else do Pk=Pk*16;end;do l_=6;end;end;end;end;end;vk=4;end;else do if vk~=2 then do Pk=0x01;end;vk=0X2;else kk=kk%H;do vk=0X01;end;end;end;end;end;end;return fk+Hk*Pk+kk*Pk;end;local Mi={};local F=E and E.band or function(dX,iX)dX=dX%H;do iX=iX%H;end;return((dX+iX)-B(dX,iX))/0X00002;end;local Y=(Fi);local k=E and E[ni]or function(Q0,L0)local N0=0;repeat if N0~=0 then L0=L0%H;N0=2;else Q0=Q0%H;N0=0X1;end;until N0>1;return f-F(f-Q0,f-L0);end;local P=E and E[ki]or function(qb)do return f-(qb%H);end;end;do Qi=0;end;local K,h,vi,X=nil,nil,nil,(nil);repeat do if not(Qi<=1)then do if Qi<=0X2 then h={2,0x0003,1};Qi=4;else do if Qi~=3 then vi={};do Qi=3;end;else do X=E and E.rshift;end;do Qi=0X0001;end;end;end;end;end;else do if Qi==0X0 then K=E and E.lshift;Qi=0X2;else K=K or function(PW,MW)if not(MW>=0X020)then else do return oi;end;end;if MW<0 then return X(PW,-MW);end;do return(PW*W[MW])%H;end;end;break;end;end;end;end;until false;local j=(rawget);do Qi=0X0;end;local i,J=nil,nil;while Qi<=0X2 do do if Qi<=0 then do X=X or function(OD,tD)if not(tD>=0X20)then else do return 0X0000;end;end;local VD=nil;for Km=0X0,0x0002 do if Km<=0X000 then if not(tD<0)then else return K(OD,-tD);end;else if Km~=0X1 then return VD-VD%0X1;else do VD=(OD%H/W[tD]);end;end;end;end;end;end;Qi=2;else if Qi~=0X00001 then i={[4]=0X0004,[0]=5,[0]=9,[1]=5,[5]=0X0000,[2]=0x7,[3]=0X004,[Pi]=0X1,[8]=1};Qi=1;else J=function()local CQ,VQ=0,(0);while true do local ig=(u(d,Z,Z));Z=Z+0x1;VQ=k(VQ,K(F(ig,0X7f),CQ));if F(ig,128)~=0X0 then else return VQ;end;do CQ=CQ+7;end;end;end;Qi=3;end;end;end;end;local Oi=(V());local Li=V();do Qi=2;end;local S,zi,Gi,mi,Q=nil,nil,nil,nil,nil;do repeat if Qi<=1 then do if Qi==0 then do zi=function(XK)local RK=({u(d,Z,Z+0X3)});local yK=B(RK[1],Li);local PK,pK,xK=nil,nil,(nil);local KK=0;while(true)do if KK<=2 then if not(KK<=0X00000)then do if KK==1 then pK=B(RK[0X3],Li);KK=2;else xK=B(RK[4],Li);KK=4;end;end;else do PK=B(RK[0X0002],Li);end;do KK=1;end;end;else if not(KK<=0X3)then do if KK==0X4 then Li=(57*Li+XK)%0X000100;do KK=3;end;else do return xK*16777216+pK*65536+PK*0x0000100+yK;end;end;end;else Z=Z+0X04;do KK=5;end;end;end;end;end;end;Qi=0X00004;else mi=1;Qi=3;end;end;elseif not(Qi<=0x2)then if Qi~=0X3 then do Gi=function(...)do return z("#",...),{...};end;end;end;Qi=0X1;else Q=function()local GI=J();if GI>r then do return GI-H;end;end;return GI;end;break;end;else S=Ki;Qi=0;end;until(false);end;local Di=function(X_)local m_=b();local I_,T_=0,nil;while true do do if I_<=1 then if I_~=0 then return T_;else T_=Xi;I_=0x2;end;else if I_~=0X2 then Z=Z+m_;do I_=1;end;else for tz=0X1,m_,7997 do local kz=(tz+0X0001f3d-1);local wz=(nil);local az=0;repeat if not(az<=1)then if az==2 then wz={u(d,Z+tz-0X0001,Z+kz-Ui)};az=0X3;else for V0=0X1,#wz do local b0=1;while b0~=0X2 do do if b0~=0 then(wz)[V0]=B(wz[V0],Oi);b0=0X0;else Oi=(X_*Oi+35)%256;b0=2;end;end;end;end;do az=0X01;end;end;else if az~=0 then T_=T_..x(e(wz));do az=0X4;end;else do if not(kz>m_)then else kz=m_;end;end;az=0X2;end;end;until az>=4;end;I_=0x3;end;end;end;end;end;Qi=0X2;local yi,ui=nil,(nil);repeat if Qi<=0X0 then function ui()local eO,ZO,KO=0X2,nil,nil;repeat if not(eO<=1)then do if eO~=0X0002 then ZO[0XA]=V();eO=4;else eO=0;end;end;else do if eO~=0X0 then do KO={};end;eO=3;else ZO={{},hi,{},hi,{},hi,hi,hi,hi};eO=0X1;end;end;end;until eO==4;local DO,wO,bO,IO=nil,nil,nil,(nil);for GS=0X0,0X6 do if not(GS<=0x2)then if not(GS<=4)then if GS==5 then ZO[0X4]=DO;else for Xk=0X1,J()do DO[Xk]={V(),J()};end;end;else if GS==3 then bO={};else do IO=0X1;end;end;end;else if not(GS<=0)then if GS==0x1 then wO=b();else for Y6=1,wO do local b6=(b());local g6=b();local s6=nil;local q6=0X1;do while true do if q6~=0 then s6=b();q6=0X0;else for Tu=b6,g6 do ZO[5][Tu]=s6;end;do break;end;end;end;end;end;end;else DO={};end;end;end;eO=0X00;while eO<=0X0001 do do if eO~=0X0 then do ZO[10]=b();end;eO=0X2;else ZO[Vi]=b();eO=1;end;end;end;local MO=ZO[1];eO=0X1;local uO,UO=nil,(nil);while true do if eO<=0 then for R1=1,uO do do MO[R1]={[7]=V(),[1]=Q(),[0x0003]=Q(),[4]=V(),[2]=Q(),[0X5]=V(),[6]=J()};end;end;eO=2;elseif eO~=0X00001 then UO=b()-14661;do break;end;else do uO=b()-69713;end;do eO=0X0000;end;end;end;eO=0X3;local WO,PO=nil,(nil);while true do if not(eO<=1)then do if eO~=2 then do WO=V();end;eO=0X02;else PO=V()~=0x000;do eO=0;end;end;end;else do if eO==0 then do for wD=1,UO do local YD=(5);local dD,ID,mD=nil,nil,nil;while YD<=7 do if not(YD<=0X3)then if not(YD<=5)then do if YD~=6 then mD={dD,{}};YD=0X2;else do if PO then local Gr=(0);do while Gr<0X2 do if Gr~=0 then mi=mi+1;Gr=2;else vi[mi]=mD;do Gr=0X1;end;end;end;end;end;end;do YD=8;end;end;end;else if YD==4 then if ID==176 then dD=b();elseif ID==0X006B then dD=y(Di(WO),b());elseif ID==0XA6 then dD=A();elseif ID==ii then dD=Ji;elseif ID==0X000035 then dD=y(Di(WO),A()+b());elseif ID==244 then dD=y(Di(WO),14);elseif ID==0xcd then dD=y(Di(WO),6);elseif ID==163 then dD=false;elseif ID~=200 then else dD=g();end;YD=7;else do dD=nil;end;do YD=0x0;end;end;end;else if YD<=1 then if YD~=0X00000 then IO=IO+Ui;YD=6;else ID=V();YD=0X003;end;else if YD==0X2 then(KO)[IO]=mD;YD=1;else bO[wD-0X01]=IO;do YD=4;end;end;end;end;end;end;end;eO=1;else do ZO[Ri]=b();end;break;end;end;end;end;local yO=(ZO[Zi]);local LO=(b()-63657);do eO=0x2;end;while eO<=4 do do if not(eO<=1)then do if eO<=0X2 then for lq=0x00000,LO-Ui do(yO)[lq]=ui();end;do eO=3;end;else if eO==0X3 then do(ZO)[0X2]=J();end;do eO=0X0;end;else for iW=0X1,uO do local kW=ZO[1][iW];for pL,SL in ipairs(h)do local kL=(1);local EL,wL=nil,nil;repeat if kL==0x00000 then do wL=kW[EL];end;do kL=0x0002;end;else do EL=i[SL];end;kL=0X0;end;until kL==0X002;if wL==10 then local we,Ze=nil,nil;for zp=0,0X2 do if zp<=0x00000 then do we=bO[kW[SL]];end;elseif zp==1 then Ze=KO[we];else if Ze then local ql=nil;local fl=(0X02);while fl<3 do if fl<=0 then ql[#ql+0x001]={kW,EL};fl=3;else if fl~=1 then kW[EL]=Ze[0X00001];fl=0x1;else ql=Ze[2];do fl=0X0;end;end;end;end;end;end;end;else if wL==0X00001 then kW[SL]=iW+kW[SL]+1;end;end;end;end;eO=5;end;end;end;else if eO~=0X0 then(ZO)[0X00006]=J();eO=0X4;else(ZO)[7]=J();eO=0x01;end;end;end;end;local AO=(V());(ZO)[9]=U(AO,1,1)~=0;(ZO)[0X8]=U(AO,2,0X01)~=0;eO=0;do repeat if not(eO<=0)then if eO~=1 then ZO[0X0011]=b();eO=3;else(ZO)[0X000013]=b();eO=0x2;end;else do ZO[0XB]=V();end;do eO=0X1;end;end;until eO>=0X03;end;ZO[0X12]=b();do(ZO)[0X0a]=V();end;return ZO;end;Qi=3;else if Qi==1 then function yi(dk,Ik,Nk)local wk,Tk=Ik[0X8],Ik[0X00006];local hk,mk,Jk,nk=Ik[1],Ik[3],Ik[7],(Ik[0X2]);local ik=Ik[5];local ek=Ik[9];local Ek=S({},{__mode='v'});local tk=(nil);tk=function(...)local tr=1;local Xr,Jr={},0;local kr={[1]=Xr,[2]=Ik};local lr=(T and T()or _ENV);local Kr,fr=Gi(...);do Kr=Kr-0X1;end;local Mr=((lr==c and dk or lr));do for vQ=0X00,Kr do do if not(Jk>vQ)then do break;end;else do Xr[vQ]=fr[vQ+0X001];end;end;end;end;end;if not ek then fr=nil;else if wk then Xr[Jk]={n=Kr>=Jk and Kr-Jk+1 or 0,e(fr,Jk+0X1,Kr+1)};end;end;if Mr~=lr then if not(p)then _ENV=Mr;else p(tk,Mr);end;end;local jr,Qr,Rr,sr=G(function()while 0x00075899095 do local FX=(hk[tr]);local EX=(FX[0X6]);tr=tr+1;if not(EX>=47)then if EX<23 then do if EX>=11 then if not(EX>=0X11)then if not(EX>=0xE)then if not(EX>=12)then Xr[FX[1]]=Xr[FX[0X3]]~=Xr[FX[2]];else if EX~=0X0000d then(Mi)[FX[0X00003]]=Xr[FX[1]];else Jr=FX[0X00001];do Xr[Jr]=Xr[Jr]();end;end;end;else if not(EX<15)then if EX==16 then local qm=(mk[FX[0X0003]]);local Fm=qm[0X00004];local dm,Ym=#Fm,(nil);if dm>0x0 then Ym={};for V0=1,dm do local R0=Fm[V0];if R0[0x1]==0X00 then do(Ym)[V0-0X1]={Xr,R0[0X2]};end;else do Ym[V0-1]=Nk[R0[2]];end;end;end;(l)(Ek,Ym);end;Xr[FX[0X1]]=yi(Mr,qm,Ym);else Xr[FX[0X1]]=Xr[FX[3]][FX[0X7]];end;else if Xr[FX[3]]<Xr[FX[0X2]]then tr=FX[1];end;end;end;else if EX>=0X0014 then if not(EX<0X15)then do if EX~=22 then local gu=(FX[0X00003]);local xu=(Xr[gu]);do for Vw=gu+1,FX[0X2]do do xu=xu..Xr[Vw];end;end;end;(Xr)[FX[0x001]]=xu;else Xr[FX[1]]=Xr[FX[3]]<=Xr[FX[0X00002]];end;end;else Xr[FX[1]]=Mr[FX[0X004]];end;else if not(EX<0X12)then if EX==19 then local rI=(FX[1]);(Xr[rI])(e(Xr,rI+1,Jr));Jr=rI-0x001;else(Xr)[FX[1]]=Xr[FX[0X00003]]+FX[7];end;else if FX[0X02]==0X00003C then do tr=tr-1;end;(hk)[tr]={[1]=(FX[0X1]-183),[0X6]=0X52,[3]=(FX[3]-183)};else Xr[FX[0x01]]=not Xr[FX[0X3]];end;end;end;end;elseif not(EX<5)then if not(EX>=8)then if EX<6 then local eQ=Nk[FX[0x3]];eQ[1][eQ[2]]=Xr[FX[0X1]];else if EX==0X7 then local P_=FX[0X1];local C_=Xr[P_];local I_=(FX[2]-1)*50;for YM=1,Jr-P_ do do C_[I_+YM]=Xr[P_+YM];end;end;else(Xr)[FX[1]]=Xr[FX[3]]^Xr[FX[2]];end;end;else do if EX<9 then local jI=(FX[0X01]);Xr[jI]=Xr[jI](Xr[jI+1]);do Jr=jI;end;else if EX~=10 then local z3=(FX[0X1]);Xr[z3](Xr[z3+1],Xr[z3+2]);do Jr=z3-0X1;end;else local U3,y3=FX[1],(Xr[FX[3]]);Xr[U3+1]=y3;Xr[U3]=y3[FX[7]];end;end;end;end;else do if not(EX<0x2)then if EX<0X3 then do(Xr[FX[1]])[FX[4]]=Xr[FX[2]];end;else if EX==4 then(Xr)[FX[1]]=Xr[FX[0X00003]]%Xr[FX[0X002]];else do repeat local uP,jP=Ek,Xr;if not(#uP>0)then else local xS={};for zD,uD in Y,uP do for Sz,Jz in Y,uD do if not(Jz[0X0001]==jP and Jz[2]>=0)then else local Rg=Jz[2];if not xS[Rg]then do xS[Rg]={jP[Rg]};end;end;(Jz)[1]=xS[Rg];Jz[0X2]=1;end;end;end;end;until true;end;do return true,FX[0X1],1;end;end;end;else if EX==0X001 then(Xr)[FX[1]]=Xr[FX[3]]+Xr[FX[0X2]];else(Xr)[FX[1]]=Xr[FX[3]]*Xr[FX[0X2]];end;end;end;end;end;else do if not(EX>=35)then if not(EX>=0X1D)then if not(EX>=0X0001a)then if not(EX>=24)then local vm=(FX[0x1]);local Mm,Hm=Xr[vm]();if not(Mm)then else for a8=1,FX[0X2]do(Xr)[vm+a8]=Hm[a8];end;tr=FX[0X3];end;else if EX~=0X000019 then local Nn=(FX[0X1]);Xr[Nn]=Xr[Nn](e(Xr,Nn+0X00001,Jr));Jr=Nn;else local Nf=(FX[0X00001]);local Pf=t(function(...)s();do for vf,xf,zf,Df,sf,qf,Ef,cf,Xf,If in...do(s)(true,{vf,xf,zf,Df,sf,qf,Ef,cf,Xf,If});end;end;end);(Pf)(Xr[Nf],Xr[Nf+1],Xr[Nf+2]);do Jr=Nf;end;Xr[Nf]=Pf;tr=FX[3];end;end;else if not(EX>=27)then do Xr[FX[0x1]]=Xr[FX[0X3]]>Xr[FX[0X0002]];end;else if EX~=0X1c then local We=FX[0x0001];local Ze,Fe=Xr[We]();if not(Ze)then else do tr=FX[0X3];end;Xr[We+3]=Fe;end;else if not(FX[0X4]<Xr[FX[0X2]])then tr=FX[0x1];end;end;end;end;else if not(EX>=0x00020)then if EX<30 then local v5=FX[0X1];Xr[v5](Xr[v5+0X1]);Jr=v5-0X1;else if EX==31 then Xr[FX[1]]=Xr[FX[3]]>=Xr[FX[2]];else do(Xr)[FX[0X1]]=FX[0X4];end;end;end;else if not(EX<33)then if EX~=0x22 then if Xr[FX[0x3]]~=Xr[FX[2]]then tr=FX[0X01];end;else local Dv=FX[1];local Nv,kv,Yv=Xr[Dv]();do if not(Nv)then else do Xr[Dv+0X00001]=kv;end;(Xr)[Dv+0X2]=Yv;tr=FX[3];end;end;end;else do Xr[FX[0X0001]]=false;end;end;end;end;elseif EX<0X000029 then if not(EX>=0x026)then if EX<36 then do if FX[2]~=160 then for GT=FX[0X1],FX[3]do Xr[GT]=nil;end;else tr=tr-1;(hk)[tr]={[1]=(FX[0x1]-0XC1),[0X6]=54,[3]=(FX[3]-0XC1)};end;end;else if EX==0X000025 then repeat local Zx,Wx=Ek,(Xr);if#Zx>0 then local Ag={};for aD,AD in Y,Zx do do for Tv,kv in Y,AD do do if not(kv[1]==Wx and kv[0X2]>=0x0)then else local xq=kv[2];do if not Ag[xq]then(Ag)[xq]={Wx[xq]};end;end;(kv)[1]=Ag[xq];(kv)[2]=1;end;end;end;end;end;end;until true;local aE=FX[1];return false,aE,aE;else local MD=(FX[1]);Jr=MD+FX[3]-0x1;Xr[MD](e(Xr,MD+1,Jr));Jr=MD-0X00001;end;end;else if EX>=39 then if EX~=0X28 then(Xr)[FX[0X01]]=Mi[FX[3]];else local YV=FX[0X00001];local CV=(Xr[YV]);local fV=(Xr[YV+1]);local xV=(Xr[YV+2]);Xr[YV]=t(function()for lV=CV,fV,xV do(s)(true,lV);end;end);tr=FX[3];end;else local fU=FX[1];local yU,eU=Xr[fU]();if yU then(Xr)[fU+0X0001]=eU;tr=FX[0X3];end;end;end;else do if not(EX<44)then if EX<45 then local Dj=FX[0X1];local Aj=t(function(...)(s)();do for sP in...do s(true,sP);end;end;end);Aj(Xr[Dj],Xr[Dj+1],Xr[Dj+2]);Jr=Dj;(Xr)[Dj]=Aj;tr=FX[3];else do if EX~=46 then if FX[0X2]==0XDE then tr=tr-1;(hk)[tr]={[3]=(FX[3]-0X45),[6]=46,[0X001]=(FX[1]-69)};else local YJ=FX[1];for Qx=YJ,YJ+(FX[3]-0X0001)do(Xr)[Qx]=fr[Jk+(Qx-YJ)+0x1];end;end;else do if FX[0X2]==0x75 then tr=tr-0X00001;hk[tr]={[0X01]=(FX[1]-0x2A),[0X003]=(FX[0X003]-42),[6]=0X53};elseif FX[2]==98 then tr=tr-0X1;(hk)[tr]={[3]=(FX[3]-0XE4),[1]=(FX[1]-228),[6]=82};else Xr[FX[1]]=nil;end;end;end;end;end;else if EX<42 then do if FX[2]==0XF7 then tr=tr-1;hk[tr]={[1]=(FX[1]-90),[0x0006]=46,[0X03]=(FX[0X3]-0X00005A)};else local z3,g3=FX[0X01],(Kr-Jk);if g3<0 then g3=-0x1;end;do for uA=z3,z3+g3 do Xr[uA]=fr[Jk+(uA-z3)+1];end;end;Jr=z3+g3;end;end;else if EX==43 then Xr[FX[0X00001]]=kr[FX[3]];else do if not(Xr[FX[0X3]]<Xr[FX[0X002]])then tr=FX[0X1];end;end;end;end;end;end;end;end;end;else if not(EX>=71)then do if EX<0X003b then if not(EX<0X035)then do if EX<0X38 then do if not(EX<54)then if EX==55 then local DA=(Nk[FX[3]]);Xr[FX[1]]=DA[0X001][DA[2]];else do repeat local SL,NL=Ek,Xr;if#SL>0X0000 then local bR=({});for W2,X2 in Y,SL do for l5,L5 in Y,X2 do if not(L5[0X1]==NL and L5[2]>=0X0)then else local RL=(L5[2]);do if not bR[RL]then bR[RL]={NL[RL]};end;end;L5[0x1]=bR[RL];L5[0x2]=1;end;end;end;end;until true;end;return false,FX[1],Jr;end;else if Xr[FX[0X03]]==FX[0X007]then else tr=FX[1];end;end;end;else if EX<57 then Xr[FX[0X1]]=k(Xr[FX[3]],Xr[FX[2]]);else if EX==58 then if not(Xr[FX[3]]<=Xr[FX[2]])then do tr=FX[1];end;end;else(Xr)[FX[0X0001]]=F(Xr[FX[0x00003]],Xr[FX[0X2]]);end;end;end;end;else if not(EX<0X32)then if EX>=0X33 then do if EX~=0x34 then if FX[0X002]==0X5b then tr=tr-1;(hk)[tr]={[0X00001]=(FX[0X1]-0x0B3),[6]=75,[3]=(FX[3]-0X0000b3)};elseif FX[0X002]==153 then do tr=tr-1;end;hk[tr]={[6]=0X2E,[0X3]=(FX[0x3]-0X87),[1]=(FX[0X01]-135)};else Xr[FX[0x001]]=#Xr[FX[0X00003]];end;else local aR,QR=FX[3],(FX[0X2]);local GR=FX[0x1];if aR==0 then else do Jr=GR+aR-1;end;end;local vR,qR=nil,(nil);if aR~=0X001 then vR,qR=Gi(Xr[GR](e(Xr,GR+0X001,Jr)));else vR,qR=Gi(Xr[GR]());end;if QR~=0X0001 then if QR~=0X0 then vR=GR+QR-0X002;do Jr=vR+0X1;end;else vR=vR+GR-0x001;Jr=vR;end;local jF=0X000;do for rX=GR,vR do do jF=jF+0X01;end;do(Xr)[rX]=qR[jF];end;end;end;else do Jr=GR-1;end;end;end;end;else local q6=(FX[1]);local I6=t(function(...)(s)();for iU,nU in...do s(true,iU,nU);end;end);(I6)(Xr[q6],Xr[q6+1],Xr[q6+0X2]);Jr=q6;do Xr[q6]=I6;end;do tr=FX[3];end;end;else if EX>=0x30 then if EX==49 then if Xr[FX[3]]==FX[7]then tr=FX[1];end;else local hH=FX[1];local HH,pH=Xr[hH],((FX[0X2]-1)*50);for ky=1,FX[0x3]do(HH)[pH+ky]=Xr[hH+ky];end;end;else if not(not(Xr[FX[3]]<=FX[7]))then else tr=FX[1];end;end;end;end;else do if not(EX<0X000041)then if not(EX>=68)then if EX<0x42 then do repeat local Lb,Qb=Ek,Xr;if not(#Lb>0X0)then else local hN=({});for jF,eF in Y,Lb do do for EN,gN in Y,eF do do if not(gN[0X01]==Qb and gN[0X002]>=0)then else local uh=gN[2];if not hN[uh]then(hN)[uh]={Qb[uh]};end;(gN)[1]=hN[uh];do gN[2]=0X01;end;end;end;end;end;end;end;until true;end;local nA=(FX[1]);return false,nA,nA+FX[0X3]-0x00002;else if EX==67 then(Xr[FX[1]])[Xr[FX[3]]]=FX[0X7];else do Xr[FX[1]]=Xr[FX[3]]<Xr[FX[0X2]];end;end;end;else if EX<69 then Xr[FX[1]]=Xr[FX[0X3]]%FX[0x7];else do if EX==0X00046 then Xr[FX[1]]=Xr[FX[3]]~=FX[0X007];else Xr[FX[1]]=Xr[FX[0X3]][Xr[FX[0X00002]]];end;end;end;end;else if not(EX>=62)then if not(EX>=60)then(Xr)[FX[0x1]]=FX[0x4];else if EX~=0X3d then Xr[FX[0x00001]]=Xr[FX[3]]==Xr[FX[2]];else local r3=FX[1];Xr[r3]=Xr[r3](Xr[r3+0x1],Xr[r3+2]);do Jr=r3;end;end;end;else if EX>=63 then do if EX==0X000040 then Xr[FX[0X01]]=true;else(Mr)[FX[0x4]]=Xr[FX[0x1]];end;end;else local kd=(Xr[FX[0X3]]/Xr[FX[2]]);do(Xr)[FX[0X001]]=kd-kd%0X01;end;end;end;end;end;end;end;else if EX<0X53 then if not(EX<0X4D)then if not(EX<80)then do if not(EX<81)then do if EX~=82 then if Xr[FX[3]]==Xr[FX[2]]then tr=FX[0X1];end;else if FX[0X0002]==0x34 then tr=tr-0X1;hk[tr]={[1]=(FX[0X1]-0XE3),[3]=(FX[3]-227),[6]=51};elseif FX[2]~=199 then Xr[FX[0X1]]=Xr[FX[3]];else do tr=tr-1;end;(hk)[tr]={[6]=65,[1]=(FX[0x0001]-153),[0X3]=(FX[3]-153)};end;end;end;else(Xr)[FX[1]]=Xr[FX[0X03]]==FX[0x7];end;end;else if EX<0X00004e then local rj=(FX[0X3]);(Xr)[FX[1]]=Xr[rj]..Xr[rj+1];else if EX~=0X4f then Xr[FX[0X01]]=Xr[FX[3]]/Xr[FX[0X02]];else if not(Xr[FX[0x001]])then else tr=FX[0X00003];end;end;end;end;else if not(EX<74)then if not(EX<75)then if EX~=76 then if FX[0X00002]==42 then do tr=tr-0X1;end;do(hk)[tr]={[0X1]=(FX[0X1]-214),[0x0006]=0X000053,[0X0003]=(FX[0X3]-214)};end;elseif FX[0X002]==68 then tr=tr-1;(hk)[tr]={[0X00006]=37,[0X3]=(FX[0X003]-0X48),[1]=(FX[1]-0x48)};else do(Xr)[FX[0X1]]=-Xr[FX[3]];end;end;else(Xr)[FX[1]]=P(Xr[FX[3]]);end;else local Bu=(FX[1]);Jr=Bu+FX[3]-0x00001;Xr[Bu]=Xr[Bu](e(Xr,Bu+0X1,Jr));do Jr=Bu;end;end;else if not(EX<72)then if EX==73 then kr[FX[3]]=Xr[FX[0x01]];else(Xr)[FX[0X1]]=Xr[FX[3]]-Xr[FX[2]];end;else(Xr[FX[1]])[Xr[FX[3]]]=Xr[FX[2]];end;end;end;else if EX>=0X059 then if EX>=0x05c then if EX<0X5D then tr=FX[0X03];else do if EX~=94 then(Xr[FX[1]])[FX[4]]=FX[0x7];else if not(not Xr[FX[0X00001]])then else do tr=FX[3];end;end;end;end;end;else do if EX<90 then do Xr[FX[0x1]]={e({},0X0001,FX[3])};end;else if EX~=0X00005B then(Xr)[FX[0X1]]=X(Xr[FX[3]],Xr[FX[0x00002]]);else Xr[FX[0x01]]=B(Xr[FX[0X3]],Xr[FX[2]]);end;end;end;end;else if not(EX>=0X56)then if EX>=0X0054 then do if EX~=0X55 then do Jr=FX[1];end;Xr[Jr]();Jr=Jr-1;else do(Xr)[FX[1]]={};end;end;end;else do repeat local VK,MK=Ek,(Xr);if#VK>0X000 then local TP=({});do for YD,qD in Y,VK do for N5,d5 in Y,qD do if d5[0X1]==MK and d5[0X002]>=0X00 then local LE=d5[0X2];if not TP[LE]then TP[LE]={MK[LE]};end;do(d5)[0X1]=TP[LE];end;do(d5)[2]=1;end;end;end;end;end;end;until true;end;return;end;else if EX>=87 then do if EX~=0x00058 then local TX,YX=FX[1],FX[0X0003];do Jr=TX+YX-1;end;repeat local Ar,Or=Ek,Xr;if#Ar>0x0 then local x9=({});for rC,gC in Y,Ar do do for Da,Ra in Y,gC do if not(Ra[1]==Or and Ra[2]>=0)then else local I_=(Ra[2]);if not x9[I_]then x9[I_]={Or[I_]};end;Ra[1]=x9[I_];(Ra)[2]=1;end;end;end;end;end;until true;return true,TX,YX;else do repeat local fF,zF=Ek,(Xr);if not(#fF>0)then else local BR=({});for gQ,OQ in Y,fF do for pR,DR in Y,OQ do if not(DR[1]==zF and DR[2]>=0)then else local EI=DR[0X00002];do if not(not BR[EI])then else BR[EI]={zF[EI]};end;end;DR[0X1]=BR[EI];(DR)[2]=1;end;end;end;end;until true;end;do return true,FX[0X1],0;end;end;end;else if FX[0x00002]==115 then tr=tr-0x1;hk[tr]={[0x6]=0X0036,[0X001]=(FX[1]-192),[0X3]=(FX[0X3]-192)};elseif FX[2]~=77 then repeat local hh,ph,Kh=Ek,Xr,FX[0X1];do if#hh>0 then local sA=({});for Fz,mz in Y,hh do for eT,DT in Y,mz do if DT[0x001]==ph and DT[0X2]>=Kh then local Mf=(DT[0X2]);if not(not sA[Mf])then else sA[Mf]={ph[Mf]};end;DT[1]=sA[Mf];do(DT)[0X2]=0x1;end;end;end;end;end;end;until true;else tr=tr-0X001;(hk)[tr]={[1]=(FX[1]-155),[6]=0x000052,[0x3]=(FX[0X3]-0x00009b)};end;end;end;end;end;end;end;end;end);if jr then do if Qr then do if sr==0x0001 then return Xr[Rr]();else return Xr[Rr](e(Xr,Rr+1,Jr));end;end;else if not(Rr)then else return e(Xr,Rr,sr);end;end;end;else do if v(Qr)=="string"then if q(Qr,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if q(Qr,'^.-:\037\100\043:\032')then M("\076\117ra\112h Sc\114\105pt:"..(ik[tr-0X1]or"(internal)")..": "..m(Qr),0);else(M)(Qr,0x0);end;else M(Qr,0);end;end;end;end;do if not(p)then else p(tk,dk);end;end;return tk;end;do Qi=0;end;else do Qi=0X1;end;end;end;until Qi>=0X03;local xi=ui();Qi=0X1;do repeat do if Qi==0X0 then vi=hi;Qi=0X2;else do Mi[2]=vi;end;Qi=0;end;end;until Qi>=0X2;end;return yi(c,xi,nil)(...);end)(0x0054,setmetatable,10,rawset,0XE,'\098\111r',string,7,coroutine,9,0,bit32,pcall,setfenv,table,0X000c,2,true,string.gsub,tostring,next,select,nil,"bxo\114",getfenv,'\098\110o\116',unpack,0X00008,0X00004,error,"",0X1,5,16777216,0XD,0X003,0xB,string.match,type,_ENV,{0X5D4f,2809568284,1794386068,0x0000cfd65407,0xe747c4C7,1840388715,0xa984e43f,2542462967,1293839487},...);
